

type Query {
  search(postID: ID!): [Post]
}

enum PostStatus {
  ACTIVE
  INACTIVE
}

type Blog @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  posts: [Post] @hasMany
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  status: PostStatus!
  # blog: Blog @belongsTo 
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  note: [Note] @hasMany(indexName: "byNote", fields: ["id"])
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  post: Post @belongsTo
  
}

type Note @model @auth(rules: [{allow: public}]) {
  id: ID!
  notice: String!
  postID: ID! @index(name: "byNote", sortKeyFields: ["notice"])
  post: Post @belongsTo
}
 